# -*- coding: utf-8 -*-
"""Murder_Mystery_sindu.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/19oYIOyrYIK73qEP_I1-4h6wgGz4gqVPN
"""

# Import libraries pandas and sqlite3 for executing SQL queries.

import pandas as pd
import sqlite3 as sql

# Establish a connection between the database and the environment

conn=sql.connect("/content/sql-murder-mystery.db")

#print the connection----to know connection is established or not

print(conn)

# write the first query to retrieve the data from 'crime_scene_report' where city is "SQL City" and order by date.

query_1='''
SELECT *
FROM crime_scene_report
WHERE city = "SQL City"
ORDER BY date;
'''

# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_1,conn)

# write second query to retreive data from 'crime-scene_report' table where city is "SQL City" and date is--15th january 2018.

query_2='''
SELECT *
FROM crime_scene_report
WHERE date=20180115 and city="SQL City";
'''

# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_2,conn)

# write a query to retrieve the data from the table 'crime_scene_report, where city is "SQL city" , date is---15th january 2018 and crime tyep is "murder"

query_3='''
SELECT *
FROM crime_scene_report
WHERE date=20180115 AND city="SQL City" AND type='murder';
'''

# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_3,conn)

# we got the data of the murder done with two witnesses now withdraw the data from the table "persons"--


#Retrieve the data of the person lives in "Northwestern Dr" in the last house--[the address number is maximum---descend the order]
query_4='''
SELECT *
FROM person
WHERE address_street_name='Northwestern Dr'
ORDER BY address_number DESC;
'''
# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# As mentioned the last address will be of maximum number we can order the table to get the last Address.

df1=pd.read_sql_query(query_4,conn)[:1]
pd.read_sql_query(query_4,conn)[:1]
#The first winesses it is found

#reteive the data of the second witness from the "persons" tale from the database where street name is "Franklin Ave" and first name is "Annabel"

query_5='''
SELECT *
FROM person
WHERE address_street_name='Franklin Ave' AND name LIKE 'Annabel%';
'''

# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

df=pd.read_sql_query(query_5,conn)
pd.read_sql_query(query_5,conn)
# second witness is also found

#the witnesses are-----

print(df1)
print("-----------------------------------------------------------------------------")
print(df)

# retreive the interview given by the Morty and Annabel from "Interview table."

query_6='''
SELECt *
FROM interview
WHERE person_id=14887 OR person_id=16371;
'''
# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_6,conn)

# From the above information search for the person in get_fit_now_check_in where membership_id is "48Z%" and check_in date is January 9th of 2018.

query_7='''
SELECt *
FROM get_fit_now_check_in
WHERE membership_id LIKE '48Z%' and check_in_date=20180109;
'''
# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_7,conn)

#Search the person with id "48Z%" and membership_status is "gold".

query_8='''
SELECt *
FROM get_fit_now_member
WHERE id LIKE '48Z%' and membership_status='gold';
'''
# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_8,conn)

#we have two people. So, we go and check for the data given about car details where plate number is having "%H42W%"

query_9='''
SELECt *
FROM drivers_license
WHERE plate_number LIKE '%H42W%';
'''
# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_9,conn)

#From person table get the details according to their license_id.

query_10='''
SELECt *
FROM person
WHERE license_id=183779 OR license_id=423327 OR license_id=664760;
'''
# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_10,conn)

#check the data in get_fit_now_member if there is anyone with the above person ids.

query_11='''
SELECt *
FROM get_fit_now_member
WHERE person_id=51739 OR person_id=67318 OR person_id=78193;
'''
# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_11,conn)

# we got the culprit as "Jeremy Bowers"

# Get the interview of the "Jeremy" from "interview" table.

query_12='''
SELECT *
FROM interview
WHERE person_id=67318;
'''

# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_12,conn)

#Get the driving_license of the person  mentioned by the culprit---"Jeremy" where car_make is "Tesla", car_model is "Model S", gender is "Female" and hair color is "red"

query_13='''
SELECT *
FROM drivers_license
WHERE car_make='Tesla' AND car_model='Model S' AND gender='female' AND hair_color='red';
'''
# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_13,conn)

# get the details or person ids of these persons from the person table.

query_14='''
SELECT *
FROM person
WHERE license_id=202298 OR license_id=291182 OR license_id=918773;
'''
# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_14,conn)

#Another clue is she went to "SQL Symphony Concert" three times. Observe the persons where event_name is "SQL Symphony Event" and person ids are given above and count is "three".

query_14='''
SELECT person_id,event_name,count(*)
FROM facebook_event_checkin
GROUP BY person_id
HAVING count(*)=3 AND date like '201712%' AND event_name='SQL Symphony Concert' AND person_id=99716 OR person_id=90700 OR person_id=78881;
'''
# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_14,conn)

#We got the person id of the master mind--Get the detailos of tha Master mind from the person table

query_15='''
SELECT *
FROM person
WHERE id=99716;
'''
# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_15,conn)

#We got the master mind as "Miranda Priestly"

#Insert the usename and name of the master mind into the solutions table.

query_16='''
INSERT INTO solution VALUES(1,'Miranda Priestly')
'''
# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_15,conn)

#it is accepted by the solution table---there fore Miranda Priestly is the Master mind.

query_17='''
SELECT * FROM solution
'''
# set an option to display all the columns in the query result.

pd.set_option('display.max_colwidth',None)

# read the query to display the result

pd.read_sql_query(query_15,conn)

"""Culprit---   Jeremy Bowers
Master Mind--- Miranda priestly





"""



